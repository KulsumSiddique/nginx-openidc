<?xml version="1.0"?>
<oidcConfig>
	<!-- OpenID-Connect Provider metadata url -->	 
	 <oidcProvider>
	 	<!--metadataUrl>https://accounts.google.com/.well-known/openid-configuration</metadataUrl-->
	 	<issuer>https://accounts.google.com</issuer>
	 	<authorizationEndpoint>https://accounts.google.com/o/oauth2/v2/auth</authorizationEndpoint>
	 	<tokenEndpoint>https://www.googleapis.com/oauth2/v4/token</tokenEndpoint>
	 	<jwksUri>https://www.googleapis.com/oauth2/v3/certs</jwksUri>	 		 	
	 </oidcProvider>

	<!-- relying parties configuration -->
	 <relyingParties default="282412598309-545pvmsh9r23f4k1o7267744s59sod6v.apps.googleusercontent.com">
	 	<relyingParty clientID="282412598309-545pvmsh9r23f4k1o7267744s59sod6v.apps.googleusercontent.com" clientSecret="QKpg7dmTXPCG0aPPziDbfIJ8" domain=".com" validateNonce="true">
	 		<description>nginx oidc demo</description>
	 		<redirectUri>http://ngx-oidc-demo.com/oauth2/callback</redirectUri>
	 	</relyingParty>
	 </relyingParties>
	 <!-- end of relying parties configuration -->
	 
     <oidcActions>
 
		<!-- nginx oidc internal verification handlers for what's configuration params are loaded in memory -->
	    <action id="oidc_version"><handler>oidc_version</handler></action>
	    <action id="oidc_config_core_status"><handler>oidc_config_core_status</handler></action>
	    <action id="oidc_rewrite_pageactions"><handler>oidc_rewrite_pageactions</handler></action>
	    <action id="oidc_rewrite_actionmappings"><handler>oidc_rewrite_actionmappings</handler></action>
	    <action id="oidc_rewrite_match"><handler>oidc_rewrite_match</handler></action>
	    <action id="oidc_headers"><handler>oidc_headers</handler></action>	    
	    <action id="oidc_index"><handler>oidc_index</handler></action>
	    
	    <!-- post auth phase id_token validation actions -->
		<action id="oidc-login">
		    <description>oidc login</description>
		    <isForward>false</isForward>
		    <regex>(.*)</regex>
			<advancedTemplate>true</advancedTemplate>
		    <uri><![CDATA[https://accounts.google.com/o/oauth2/v2/auth?response_type=code&scope=email+openid&client_id=282412598309-545pvmsh9r23f4k1o7267744s59sod6v.apps.googleusercontent.com&redirect_uri=http://ngx-oidc-demo.com/oauth2/callback&nonce=%{HTTP_X-RP-SESSION}r&state=($0U)]]></uri>
		</action>
		<action id="oidc-login-strip-invalid-token"><!-- strip id_token from outgoig request -->
		    <description>oidc login</description>
		    <isForward>false</isForward>
		    <regex><![CDATA[(.*)(\?|&)id_token(.*)]]></regex> <!-- to avoid passing expired id_token -->
		    <advancedTemplate>true</advancedTemplate>
		    <uri><![CDATA[https://accounts.google.com/o/oauth2/v2/auth?response_type=code&scope=email+openid&client_id=282412598309-545pvmsh9r23f4k1o7267744s59sod6v.apps.googleusercontent.com&redirect_uri=http://ngx-oidc-demo.com/oauth2/callback&nonce=%{X-RP-SESSION}r&state=($0U)]]></uri>
		</action>
		<action id="oidc_show_error">
		    <description>error returned from idp</description>
		    <isForward>false</isForward>
		    <response code="412" contentType="application/json"><![CDATA[{"responsecode":412, "description":"Error occured, see query param for description"}]]></response>
		</action>
		<action id="oidc_show_success">
		    <description>error returned from idp</description>
		    <isForward>false</isForward>
		    <response code="200" contentType="application/json"><![CDATA[{"responsecode":200, "description":"you are successfully able to access this page"}]]></response>
		</action>		
		<action id="goto-resource">
		    <description>send to resource sent in state</description>
		    <isForward>false</isForward>
			<advancedTemplate>true</advancedTemplate>		    
		    <uri><![CDATA[%{state}q]]></uri>
		</action>
		<action id="oidc_api_success">
		    <description>api success returned from idp</description>
		    <isForward>false</isForward>
		    <response code="200" contentType="application/json"><![CDATA[{"responsecode":200, "description":"you emailAddress is %{HTTP_X-OIDC-EMAIL}r"}]]></response>
		</action>		
    </oidcActions>

	<matchLists>
	    <matchList name="invalid_id_token">
	        <match>
	          	<path>id_token=</path>
				<header name="X-OIDC-VALIDATE-STATUS">failure</header>
	        </match>
	    </matchList>
	    <matchList name="oidc_session_missing">
	        <match>
				<header name="X-OIDC-VALIDATE-STATUS" isregex="true">nil</header>
	        </match>
	    </matchList>
	    <matchList name="oidc_session_invalid">
	        <match>
              <header name="X-OIDC-VALIDATE-STATUS">failure</header>
	        </match>
	    </matchList>
	    <matchList name="oidc_idp_error">
	        <match>
				<path>error=</path>
	        </match>
	    </matchList>
	</matchLists>
	
	<locations>
		<!-- nginx authz handlers to verify oidc information, mainly for debug purpose -->
	    <location path="^/oidc/version"><oidcAction>oidc_version</oidcAction></location>
	    <location path="^/oidc/config-status"><oidcAction>oidc_config_core_status</oidcAction></location>
	    <location path="^/oidc/rewrite-pageactions"><oidcAction>oidc_rewrite_pageactions</oidcAction></location>
	    <location path="^/oidc/rewrite-actionmappings"><oidcAction>oidc_rewrite_actionmappings</oidcAction></location>
	    <location path="^/oidc/rewrite-match"><oidcAction>oidc_rewrite_match</oidcAction></location>
	    <location path="^/oidc/headers"><oidcAction>oidc_headers</oidcAction></location>	    
	    <location path="^/oidc"><oidcAction>oidc_index</oidcAction></location>
	    <!-- end of nginx authz-->
        
        <!-- JWT based authorization rules -->
        <!-- protected url which you want to trigger login action -->
	    <location path="^/protected" >
			<oidcAction matchList="oidc_idp_error">oidc_show_error</oidcAction>
			<oidcAction matchList="invalid_id_token">oidc-login-strip-invalid-token</oidcAction>
			<oidcAction matchList="oidc_session_missing">oidc-login</oidcAction>
			<oidcAction matchList="oidc_session_invalid">oidc-login</oidcAction>
			<oidcAction>oidc_show_success</oidcAction>			
	    </location>
        <!-- end of JWT authorization rules -->
        
        <!-- redirect_uri aka callback handling -->
	    <location path="^/oauth2/callback\?(.*)error=">
			<oidcAction>oidc_show_error</oidcAction>			
	    </location>
	    <location path="^/oauth2/callback\?(.*)state=">
			<oidcAction>goto-resource</oidcAction>			
	    </location>   
        <!-- end of callback rules -->
        
        <!-- APIs authorizatioin -->        
	    <location path="^/api/user.email\?id_token=">
			<oidcAction matchList="oidc_session_invalid">oidc_show_error</oidcAction>
			<oidcAction>oidc_api_success</oidcAction>				
	    </location>        
        	            
	</locations>
</oidcConfig>

